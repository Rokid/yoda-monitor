stages:
  - test
  - name: deploy
    if: branch = optimize/compatitable
language: c++
sudo: required
dist: trusty
git:
  depth: false
os:
  - linux
cache:
  directories:
  - gcc-linaro-5.5.0-2017.10-x86_64_aarch64-linux-gnu/
  - sysroot-glibc-linaro-2.21-2017.10-aarch64-linux-gnu/
  - gcc-linaro-5.5.0-2017.10-x86_64_arm-linux-gnueabi/
  - sysroot-glibc-linaro-2.21-2017.10-arm-linux-gnueabi/

install:
  - sudo apt-get update -q
  - sudo apt-get install wget -q -y
  - which gcc
  - which g++
  - aarch64_toolchain_name="gcc-linaro-5.5.0-2017.10-x86_64_aarch64-linux-gnu"
  - aarch64_sysroot_name="sysroot-glibc-linaro-2.21-2017.10-aarch64-linux-gnu"
  - armhf_toolchain_name="gcc-linaro-5.5.0-2017.10-x86_64_arm-linux-gnueabi"
  - armhf_sysroot_name="sysroot-glibc-linaro-2.21-2017.10-arm-linux-gnueabi"
  - wget https://releases.linaro.org/components/toolchain/binaries/latest-5/aarch64-linux-gnu/${aarch64_toolchain_name}.tar.xz
  - wget https://releases.linaro.org/components/toolchain/binaries/latest-5/aarch64-linux-gnu/${aarch64_sysroot_name}.tar.xz
  - wget https://releases.linaro.org/components/toolchain/binaries/latest-5/arm-linux-gnueabi/${armhf_toolchain_name}.tar.xz
  - wget https://releases.linaro.org/components/toolchain/binaries/latest-5/arm-linux-gnueabi/${armhf_sysroot_name}.tar.xz
  - ls -lh
  - xz -fd ${aarch64_toolchain_name}.tar.xz & tar -xvf ${aarch64_toolchain_name}.tar & rm ${aarch64_toolchain_name}.tar
  - xz -fd ${aarch64_sysroot_name}.tar.xz & tar -xvf ${aarch64_sysroot_name}.tar & rm ${aarch64_sysroot_name}.tar
  - xz -fd ${armhf_toolchain_name}.tar.xz & tar -xvf ${armhf_toolchain_name}.tar & rm ${armhf_toolchain_name}.tar
  - xz -fd ${armhf_sysroot_name}.xz & tar -xvf ${armhf_sysroot_name}.tar & rm ${armhf_sysroot_name}.tar

jobs:
  include:
    - stage: tests
      name: "Integration aarch64-linux-gnu"
      script: tools/build.sh --host aarch64-linux-gnu --toolchain ${aarch64_toolchain_name}/bin --sysroot ${aarch64_sysroot_name} -j 8
    - script: tools/build.sh --host arm-linux-gnueabi --toolchain ${armhf_toolchain_name}/bin --sysroot ${armhf_sysroot_name} -j 8
      name: Integration arm-linux-gnueabi
    - script: tools/build.sh -j 8
      name: Integration Linux x86_64
    - stage: deploy
      name: "Deploy to Github"
      script: echo "Deploying to GitHub releases ..."
      deploy:
        provider: releases
        skip_cleanup: true
        overwrite: true
        file:
          - "build-x86_64/yoda-sixsix"
          - "build-aarch64-linux-gnu/yoda-sixsix"
          - "build-arm-linux-gnueabi/yoda-sixsix"
